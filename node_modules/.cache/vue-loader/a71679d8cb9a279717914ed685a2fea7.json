{"remainingRequest":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/src/pages/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/src/pages/Dashboard.vue","mtime":1560945569291},{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LineChart from '@/components/Charts/LineChart';\nimport BarChart from '@/components/Charts/BarChart';\nimport * as chartConfigs from '@/components/Charts/config';\nimport TaskList from './Dashboard/TaskList';\nimport UserTable from './Dashboard/UserTable';\nimport config from '@/config';\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    TaskList,\n    UserTable\n  },\n  data() {\n    return {\n      bigLineChart: {\n        allData: [\n          [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n          [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n        ],\n        activeIndex: 0,\n        chartData: null,\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: []\n      },\n      purpleLineChart: {\n        extraOptions: chartConfigs.purpleChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n          datasets: [{\n            label: \"Data\",\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [80, 100, 70, 80, 120, 80],\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.2, 0],\n      },\n      greenLineChart: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n          datasets: [{\n            label: \"My First dataset\",\n            fill: true,\n            borderColor: config.colors.danger,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.danger,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.danger,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [90, 27, 60, 12, 80],\n          }]\n        },\n        gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n        gradientStops: [1, 0.4, 0],\n      },\n      blueBarChart: {\n        extraOptions: chartConfigs.barChartOptions,\n        chartData: {\n          labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n          datasets: [{\n            label: \"Countries\",\n            fill: true,\n            borderColor: config.colors.info,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data: [53, 20, 10, 80, 100, 45],\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n      }\n    }\n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories() {\n      return this.$t('dashboard.chartCategories');\n    }\n  },\n  methods: {\n    initBigChart(index) {\n      let chartData = {\n        datasets: [{\n          fill: true,\n          borderColor: config.colors.primary,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: config.colors.primary,\n          pointBorderColor: 'rgba(255,255,255,0)',\n          pointHoverBackgroundColor: config.colors.primary,\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: this.bigLineChart.allData[index]\n        }],\n        labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n      }\n      this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = index;\n    }\n  },\n  mounted() {\n    this.i18n = this.$i18n;\n    if (this.enableRTL) {\n      this.i18n.locale = 'ar';\n      this.$rtl.enableRTL();\n    }\n    this.initBigChart(0);\n  },\n  beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = 'en';\n      this.$rtl.disableRTL();\n    }\n  }\n};\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">          \n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-bell-55 text-primary \"></i> 763,215</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"purple-line-chart\"\n                        :chart-data=\"purpleLineChart.chartData\"\n                        :gradient-colors=\"purpleLineChart.gradientColors\"\n                        :gradient-stops=\"purpleLineChart.gradientStops\"\n                        :extra-options=\"purpleLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-12\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.dailySales')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-delivery-fast text-info \"></i> 3,500â‚¬</h3>\n          </template>\n          <div class=\"chart-area\">\n            <bar-chart style=\"height: 100%\"\n                       chart-id=\"blue-bar-chart\"\n                       :chart-data=\"blueBarChart.chartData\"\n                       :gradient-stops=\"blueBarChart.gradientStops\"\n                       :extra-options=\"blueBarChart.extraOptions\">\n            </bar-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-12\" :class=\"{'text-right': isRTL}\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{$t('dashboard.completedTasks')}}</h5>\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-send text-success \"></i> 12,100K</h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart style=\"height: 100%\"\n                        chart-id=\"green-line-chart\"\n                        :chart-data=\"greenLineChart.chartData\"\n                        :gradient-stops=\"greenLineChart.gradientStops\"\n                        :extra-options=\"greenLineChart.extraOptions\">\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n  \n\n\n\n  </div>\n</template>\n<script>\n  import LineChart from '@/components/Charts/LineChart';\n  import BarChart from '@/components/Charts/BarChart';\n  import * as chartConfigs from '@/components/Charts/config';\n  import TaskList from './Dashboard/TaskList';\n  import UserTable from './Dashboard/UserTable';\n  import config from '@/config';\n\n  export default {\n    components: {\n      LineChart,\n      BarChart,\n      TaskList,\n      UserTable\n    },\n    data() {\n      return {\n        bigLineChart: {\n          allData: [\n            [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n            [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n            [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n          ],\n          activeIndex: 0,\n          chartData: null,\n          extraOptions: chartConfigs.purpleChartOptions,\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n          categories: []\n        },\n        purpleLineChart: {\n          extraOptions: chartConfigs.purpleChartOptions,\n          chartData: {\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.2, 0],\n        },\n        greenLineChart: {\n          extraOptions: chartConfigs.greenChartOptions,\n          chartData: {\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n            datasets: [{\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: 'rgba(255,255,255,0)',\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            }]\n          },\n          gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n          gradientStops: [1, 0.4, 0],\n        },\n        blueBarChart: {\n          extraOptions: chartConfigs.barChartOptions,\n          chartData: {\n            labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n            datasets: [{\n              label: \"Countries\",\n              fill: true,\n              borderColor: config.colors.info,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [53, 20, 10, 80, 100, 45],\n            }]\n          },\n          gradientColors: config.colors.primaryGradient,\n          gradientStops: [1, 0.4, 0],\n        }\n      }\n    },\n    computed: {\n      enableRTL() {\n        return this.$route.query.enableRTL;\n      },\n      isRTL() {\n        return this.$rtl.isRTL;\n      },\n      bigLineChartCategories() {\n        return this.$t('dashboard.chartCategories');\n      }\n    },\n    methods: {\n      initBigChart(index) {\n        let chartData = {\n          datasets: [{\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.bigLineChart.allData[index]\n          }],\n          labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n        }\n        this.$refs.bigChart.updateGradients(chartData);\n        this.bigLineChart.chartData = chartData;\n        this.bigLineChart.activeIndex = index;\n      }\n    },\n    mounted() {\n      this.i18n = this.$i18n;\n      if (this.enableRTL) {\n        this.i18n.locale = 'ar';\n        this.$rtl.enableRTL();\n      }\n      this.initBigChart(0);\n    },\n    beforeDestroy() {\n      if (this.$rtl.isRTL) {\n        this.i18n.locale = 'en';\n        this.$rtl.disableRTL();\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"]}]}