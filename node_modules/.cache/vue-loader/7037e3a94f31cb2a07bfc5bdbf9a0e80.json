{"remainingRequest":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/src/components/BaseCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/src/components/BaseCheckbox.vue","mtime":1560358840920},{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tbn01914/Workspace/tecoins-geral/tecoins/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"base-checkbox\",\n  model: {\n    prop: \"checked\"\n  },\n  props: {\n    checked: {\n      type: [Array, Boolean],\n      description: \"Whether checkbox is checked\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether checkbox is disabled\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether checkbox should be inline with other checkboxes\"\n    }\n  },\n  data() {\n    return {\n      cbId: '',\n      touched: false\n    }\n  },\n  computed: {\n    model: {\n      get() {\n        return this.checked\n      },\n      set(check) {\n        if (!this.touched) {\n          this.touched = true\n        }\n        this.$emit('input', check)\n      }\n    },\n    inlineClass() {\n      if (this.inline) {\n        return `form-check-inline`\n      }\n    }\n  },\n  created() {\n    this.cbId = Math.random().toString(16).slice(2)\n  }\n}\n",{"version":3,"sources":["BaseCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseCheckbox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"form-check\"\n       :class=\"[{disabled: disabled}, inlineClass]\">\n    <label :for=\"cbId\" class=\"form-check-label\">\n      <input :id=\"cbId\"\n             class=\"form-check-input\"\n             type=\"checkbox\"\n             :disabled=\"disabled\"\n             v-model=\"model\"/>\n      <span class=\"form-check-sign\"></span>\n      <slot>\n        <span v-if=\"inline\">&nbsp;</span>\n      </slot>\n    </label>\n  </div>\n</template>\n<script>\n  export default {\n    name: \"base-checkbox\",\n    model: {\n      prop: \"checked\"\n    },\n    props: {\n      checked: {\n        type: [Array, Boolean],\n        description: \"Whether checkbox is checked\"\n      },\n      disabled: {\n        type: Boolean,\n        description: \"Whether checkbox is disabled\"\n      },\n      inline: {\n        type: Boolean,\n        description: \"Whether checkbox should be inline with other checkboxes\"\n      }\n    },\n    data() {\n      return {\n        cbId: '',\n        touched: false\n      }\n    },\n    computed: {\n      model: {\n        get() {\n          return this.checked\n        },\n        set(check) {\n          if (!this.touched) {\n            this.touched = true\n          }\n          this.$emit('input', check)\n        }\n      },\n      inlineClass() {\n        if (this.inline) {\n          return `form-check-inline`\n        }\n      }\n    },\n    created() {\n      this.cbId = Math.random().toString(16).slice(2)\n    }\n  }\n</script>\n"]}]}